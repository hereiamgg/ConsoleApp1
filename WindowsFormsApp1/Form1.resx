<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyIcon.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>128, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="notifyIcon.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZmYAAHtgDgB9YBwAfWAcAH1gHAB9YBwAfWAcAH1gHAB9
        YBwAfWAcAH1gHAB9YBwAfWAcAH1gHAB9YBwAfWAcAH1gHAB9YBwAfWAcAH1gHAB9YBwAfWAcAH1gHAB9
        YBwAfWAcAH1gHAB8YA4AZmYAAAAAAAAAAAAAAAAAAAAAAAB4XA5ur3nRUJxT/zeNOv82izf/NYg1/zSG
        Mv8zhC//MYIt/zCAKv8tfSn/KXkn/yd1Jv8kciX/IW4l/x5sJP8caST/GWck/xdlJf8VYyX/FGIm/xJg
        J/8RXif/D14p/w5cKv8PYDD/GFYm2QF9Xg4AAAAAAAAAAAAAAAAAAAAAAHtcEHSyfd2k0rD/qeHI/5/a
        vv+X1LX/js6u/4XKp/98xaD/c8Kb/2nAlv9fvZL/TrWG/wSTUf8FmFj/BZxd/wWgYf8FomP/BaNl/wWj
        Zf8FoWT/BJ9h/wScXv8DmFr/A5RW/wS0iv8cWivhAX1eEAAAAAAAAAAAAAAAAAAAAAAAdEQAIIhOQj6T
        RfOa0rH/j9S0/4bPrP99yaT/dMWd/2rBl/9hvpL/WbuN/0+5if9VvI7/DJhY/waaWP8Gnlz/B6Bf/weh
        YP8HoWD/B6Be/wadW/8GmFb/BZJP/wWLR/8EpXD/DlEe9wtUJEYAgEwAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAelcCKIpIakuaUP2Y1bX/htCu/33Lpv90x6D/a8Sb/2LBlv9Zv5L/UL6O/0e9i/8usHn/B6Rj/weo
        aP8Iq2v/CK1t/witbf8Iq2v/B6ho/wejYv8GnVv/Balw/w1nNf8NTBlwAHlUAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAel0ILotDl1qkYv+P1LT/fc2o/3TKo/9rx57/YsWa/1nDlv9QwpP/R8KR/z6/
        jP8IrW7/CLJz/wm2eP8JuHr/Cbh6/wm3ef8Is3X/CK5v/wewdP8MglH/EEcQnQB7WAgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADe10QMos/wWyxef+B0K3/dMyl/2vJoP9iyJ3/Wsea/1HG
        mP9Ix5f/Scma/wm2eP8JvH7/CcCD/wrDhv8KxIf/CsKG/wm+gf8Ju37/Cp9u/xJGDccCdlQQAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAATgVMkNIs733m/kP91zaf/a8uj/2LK
        oP9ayp7/Ucqc/0jLnP9N0KP/EMCF/wrFif8Kyo//C86T/wvPlP8LzZP/CsmO/wm4hv8TTBHjCWY6JgCA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0RAAehEpCOo0+83zI
        n/9szaX/Y8yi/1rMof9RzaD/Sc+g/0HRof8nzZj/C82S/wvTmf8M2J//DNqh/wzZoP8Kzpv/FFof9Q5c
        KUYAdEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB9
        UgIlhkRqQ5NI/XXNpv9jzqT/Ws6j/1HPov9J0aP/QdSl/y/Uov8L1Jn/DNuj/wziqv8N5a7/C+Gu/xBp
        NP8RVh9uAHlUAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAVQAAfl4QAH1gHAB9
        YBwAfWAcAH1gHAB9YCQeg0CtP5hY/2vQqf9bz6T/UtGk/0nTpf9B16j/M9mn/wzYn/8M4ar/Deqz/wzv
        u/8Ig1n/DFcoswB9XyQAfWAcAH1gHAB9YBwAf2EcAHxgDgBmZgAAAAAAAAAAAAAAAAAAAAAAAHpdEG6w
        etVRn1f/OpJB/zWLOv8rfy7/InQj/xh1Kf8NjEz/QK9//13Rp/9S0aX/SdSm/0HYqf8426z/DNui/w3k
        rf8N7rj/BbCL/wNhPf8KXzP/D1wo/xFgKf8QXyr/D14s/w9hMf8ZVyfZAX1eDgAAAAAAAAAAAAAAAAAA
        AAAAfFoOdbN/26jVtf+g4sj/ld2//43Zuf+D1rT/etOv/3LSq/9p0ar/XNGm/1LRpf9J1Kb/Qdip/zzc
        rf8M2qH/DeOs/w3tt/8M9MP/DPTC/wvsuf8K4q7/Cdij/wjOmP8HxY7/BsSb/xxaLOEBfV4QAAAAAAAA
        AAAAAAAAAAAAAACATAAgiU5CP5ZJ86nbvv+Q27v/h9e1/37TsP910av/bM+o/2PPpv9b0KT/UtGk/0nT
        pf9B1qf/P9us/wzXnf8M36f/Deav/w3qtP8N6bL/DeOr/wzZoP8LzpP/CsGF/wbEk/8PUiD3C1UlRgCA
        TAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB6UQIpjEpqUJ9X/aXew/+H1rX/ftOv/3XQqv9sz6f/Y86k/1rO
        o/9Rz6L/SdGj/0HUpP8/2Kn/C9KX/wzZn/8M3qX/DOCp/wzfp/8M2qH/C9KY/wrIjf8IyZT/Dmo5/w5N
        G3AAeVQCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB6XQgvj0eXZKtt/5jbvv9+0q7/dc+p/2zO
        pv9jzaP/Wsyh/1HNoP9JzqD/QNGg/z/Upf8Ky5D/C9GW/wvVm/8M1p3/C9Wb/wvRl/8Kyo//CcmQ/wyI
        WP8QSRKfAHxZCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN7XRA0kETBebqG/4bU
        s/91zqj/a8yk/2LLof9ayp7/Ucqd/0jLnP9AzJz/P9Cg/wrDh/8KyI3/C8uQ/wvMkf8Ky5D/CseL/wnE
        iP8KpXX/E0gPxwN2VBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAABSE
        VSQ3kEHhised/3bNp/9ryqL/Ysie/1rIm/9Rx5n/SMeX/z/Ilv8+ypn/Cbt+/wm/gv8KwYX/CsKG/wrB
        hP8JvoH/CbiG/xVOFOMKZzsmAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAHREACCITkI9k0Xzjc2p/2vIn/9ixpv/WsSX/1DDlf9Hw5L/P8OQ/zvDkf8IsnT/CbZ3/wm3
        ev8JuHr/CbZ4/wi9iP8VXCL1Dl4rRgB0RAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAHpXAiiKSWpKmlH9g82o/2LDmP9ZwZT/UL+Q/0e+jf8/vYr/N7yH/wep
        af8IrGz/CK1u/witbv8HuH7/FHE3/xNZIm4AeVQCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHpdCC6LQ5dZpGL/c8eg/1m9j/9Pu4v/R7mH/z63
        hP8zs33/B6Bf/weiYf8Ho2P/Bqtt/xKHT/8XVhudAHpZCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3tdEDKLP8Fmr3b/YL2R/0+2
        hv9GtIH/PbF9/y+rcv8GllT/BphW/wacW/8PmWD/GlgYxQJ2VxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAE4FTJDOL
        O+FsuIj/ULKB/0aue/89q3b/KaFm/wWMSf8Fj0v/C59l/x1eHOMLbUAmAIAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAdEQAHYRKQjaKPfNnuYz/Rah0/z2kbv8glFb/BIM9/wiYWv8daSf1E2gzRAB0RAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAelcCJIJBaj2PSP1YsYL/PJ5n/xiGRf8FiEb/HXc1/RlnLGwAeVQCAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAel0IKH85mUKYWP9Io2//EYE//xqCQP8eaCebAHpZCAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADelsQLHw1w1Sqd/8wl13/Jm4qwwJ5
        WRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAihVomV5Vd22KZ
        Zt0xiWIoAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACA
        VQAokXkSOJmDEiWSbQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////////4AAAB+AAAAfwAAAP+AAAH/gAAB/8AAA//gAAf/8A
        AP//gAH//4AB/+AAAAfgAAAH8AAAD/gAAB/4AAAf/AAAP/4AAH//AAD//4AB//+AAf//wAP//+AH///w
        D///+B////gf///8P////n////////////8=
</value>
  </data>
</root>